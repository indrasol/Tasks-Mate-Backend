# .github/workflows/capture-dev-studio-changes.yml
name: Capture Supabase Studio changes (dev)

on:
  push:
    branches: [development]
    paths-ignore:
      - 'supabase/migrations/**'
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

jobs:
  db-diff-and-commit:
    runs-on: ubuntu-latest
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      DEV_BRANCH_NAME: development   # or whatever your persistent dev branch is called
    steps:
      - uses: actions/checkout@v4

      - uses: supabase/setup-cli@v1
        with: { version: latest }

      # Get the dev branch's Postgres URLs (non-pooling + pooling) as env vars.
      # This writes secrets to $GITHUB_ENV (NOT to logs).
      - name: Get dev branch connection info
        run: supabase --experimental branches get "$DEV_BRANCH_NAME" -o env >> $GITHUB_ENV

      - name: Generate migration from dev DB (if any)
        run: |
          mkdir -p supabase/migrations
          ts=$(date -u +%Y%m%d%H%M%S)
          supabase db diff \
            --db-url "$POSTGRES_URL_NON_POOLING" \
            --schema public,auth,storage \
            -f "from-dev-${ts}" || echo "No diff"

      - name: Commit migration if created
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(db): capture Studio changes from dev [skip ci]"
          file_pattern: supabase/migrations/*.sql

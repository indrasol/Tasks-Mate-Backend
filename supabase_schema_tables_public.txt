-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.designations (
  name USER-DEFINED NOT NULL,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_by uuid,
  updated_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  designation_id text NOT NULL,
  CONSTRAINT designations_pkey PRIMARY KEY (designation_id)
);
CREATE TABLE public.organization_invites (
  id text NOT NULL,
  org_id text NOT NULL,
  email text NOT NULL,
  designation USER-DEFINED,
  role USER-DEFINED,
  invited_by text,
  invite_status text DEFAULT 'pending'::text,
  sent_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  is_cancelled boolean DEFAULT false,
  cancel_date timestamp with time zone,
  CONSTRAINT organization_invites_pkey PRIMARY KEY (id),
  CONSTRAINT organization_invites_org_id_fkey FOREIGN KEY (org_id) REFERENCES public.organizations(org_id)
);
CREATE TABLE public.organization_members (
  user_id uuid NOT NULL,
  is_active boolean DEFAULT true,
  invited_at timestamp with time zone,
  accepted_at timestamp with time zone,
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  delete_reason text,
  role USER-DEFINED,
  designation USER-DEFINED,
  org_id text NOT NULL,
  invited_by text,
  deleted_by text,
  email text,
  username text,
  CONSTRAINT organization_members_pkey PRIMARY KEY (user_id, org_id),
  CONSTRAINT organization_members_org_id_fkey FOREIGN KEY (org_id) REFERENCES public.organizations(org_id)
);
CREATE TABLE public.organizations (
  name text NOT NULL,
  description text,
  logo text,
  email text,
  metadata jsonb DEFAULT '{}'::jsonb,
  is_deleted boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  delete_reason text,
  designations ARRAY,
  org_id text NOT NULL,
  created_by text,
  updated_by text,
  deleted_by text,
  CONSTRAINT organizations_pkey PRIMARY KEY (org_id)
);
CREATE TABLE public.organizations_history (
  name text,
  description text,
  logo text,
  email text,
  metadata jsonb,
  created_at timestamp with time zone,
  updated_at timestamp with time zone,
  deleted_at timestamp with time zone DEFAULT now(),
  delete_reason text,
  designations ARRAY,
  org_id text,
  created_by text,
  updated_by text,
  deleted_by text,
  is_deleted boolean
);
CREATE TABLE public.project_members (
  project_id text NOT NULL,
  user_id uuid NOT NULL,
  created_by text,
  updated_by text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  delete_reason text,
  designation USER-DEFINED,
  role USER-DEFINED,
  username text,
  CONSTRAINT project_members_pkey PRIMARY KEY (project_id, user_id),
  CONSTRAINT project_members_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(project_id)
);
CREATE TABLE public.project_resources (
  resource_id text NOT NULL,
  project_id text NOT NULL,
  project_name text NOT NULL,
  resource_url text,
  resource_type text,
  is_active boolean DEFAULT true,
  created_by text,
  updated_by text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  delete_reason text,
  resource_name text,
  CONSTRAINT project_resources_pkey PRIMARY KEY (resource_id),
  CONSTRAINT project_resources_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(project_id)
);
CREATE TABLE public.projects (
  project_id text NOT NULL,
  name text NOT NULL,
  description text,
  metadata jsonb DEFAULT '{}'::jsonb,
  status USER-DEFINED DEFAULT 'not_started'::project_status_enum,
  priority USER-DEFINED DEFAULT 'none'::priority_enum,
  start_date date,
  end_date date,
  created_by text,
  updated_by text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  delete_reason text,
  org_id text,
  project_owner text,
  team_members ARRAY,
  owner text,
  CONSTRAINT projects_pkey PRIMARY KEY (project_id),
  CONSTRAINT projects_org_id_fkey FOREIGN KEY (org_id) REFERENCES public.organizations(org_id)
);
CREATE TABLE public.roles (
  name USER-DEFINED NOT NULL,
  permissions jsonb DEFAULT '{}'::jsonb,
  updated_at timestamp with time zone DEFAULT now(),
  role_id text NOT NULL,
  CONSTRAINT roles_pkey PRIMARY KEY (role_id)
);
CREATE TABLE public.task_attachments (
  task_id text NOT NULL,
  title text,
  name text,
  url text,
  uploaded_by uuid,
  uploaded_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  deleted_by uuid,
  is_inline boolean DEFAULT false,
  attachment_id text NOT NULL,
  CONSTRAINT task_attachments_pkey PRIMARY KEY (attachment_id),
  CONSTRAINT task_attachments_task_id_fkey FOREIGN KEY (task_id) REFERENCES public.tasks(task_id)
);
CREATE TABLE public.task_comments (
  task_id text NOT NULL,
  title text,
  user_id uuid,
  content text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  comment_id text NOT NULL,
  CONSTRAINT task_comments_pkey PRIMARY KEY (comment_id),
  CONSTRAINT task_comments_task_id_fkey FOREIGN KEY (task_id) REFERENCES public.tasks(task_id)
);
CREATE TABLE public.tasks (
  task_id text NOT NULL,
  project_id text NOT NULL,
  sub_tasks ARRAY DEFAULT '{}'::text[],
  dependencies ARRAY DEFAULT '{}'::text[],
  title text NOT NULL,
  description text,
  status USER-DEFINED DEFAULT 'not_started'::task_status_enum,
  assignee_id uuid,
  due_date date,
  priority USER-DEFINED DEFAULT 'none'::priority_enum,
  tags ARRAY DEFAULT '{}'::text[],
  metadata ARRAY DEFAULT '{}'::jsonb[],
  created_by uuid,
  updated_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT tasks_pkey PRIMARY KEY (task_id),
  CONSTRAINT tasks_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(project_id)
);
CREATE TABLE public.tasks_history (
  task_id text NOT NULL,
  title text,
  metadata ARRAY DEFAULT '{}'::jsonb[],
  hash_id text,
  updated_at timestamp with time zone DEFAULT now(),
  history_id text NOT NULL,
  CONSTRAINT tasks_history_pkey PRIMARY KEY (history_id)
);
CREATE TABLE public.users (
  id uuid NOT NULL,
  username text NOT NULL UNIQUE,
  email text NOT NULL UNIQUE,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT users_pkey PRIMARY KEY (id)
);